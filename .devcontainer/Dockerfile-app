# Base image
FROM mcr.microsoft.com/devcontainers/python:1-3.12-bullseye

# Temporary directory where the PDF documents will be uploaded
ENV TEAM_COPILOT_APP_TEMP_DIR=/tmp/team-copilot

# - Install build and runtime dependencies:
#     - curl: To download the Poetry installer.
#     - build-essential: To compile Python packages that require C extensions (Psycopg2,
#                        in this case).
#     - python3-dev: To provide the Python headers needed for compiling C extensions.
#     - libpq-dev: PostgreSQL client library headers needed for compiling packages that
#                  interact with PostgreSQL (Pyscopg2, in this case).
#     - libpq5: PostgreSQL client library needed for Psycopg2 to connect to PostgreSQL
#               databases.
#     - tesseract-ocr-all: Tesseract OCR engine and all its language data files.
# - Remove the APT cache to reduce the image size.
RUN apt-get update && \
    apt-get install -y curl build-essential python3-dev libpq-dev libpq5 tesseract-ocr-all && \
    rm -rf /var/lib/apt/lists/*

# - Create a directory as the workspace inside the user's home directory.
# - Create the temporary directory to upload the PDF documents to.
# - Set the ownership of the temporary directory to the "vscode" user. This is neeeded to
#   allow the "vscode" user to write files to this directory.
RUN mkdir -p /home/vscode/team-copilot && \
    mkdir -p $TEAM_COPILOT_APP_TEMP_DIR && \
    chown vscode:vscode $TEAM_COPILOT_APP_TEMP_DIR

# Switch to the "vscode" user
USER vscode

# Add the directory where Poetry will be installed to the Path, so that the "poetry"
# command can be found.
ENV PATH="/home/vscode/.local/bin:$PATH"

# - Install Poetry using its official installer.
# - Configure Poetry to create virtual environments inside the project directory.
RUN curl -sSL https://install.python-poetry.org | python3 - && \
    poetry config virtualenvs.in-project true
